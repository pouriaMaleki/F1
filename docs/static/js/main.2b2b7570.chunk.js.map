{"version":3,"sources":["presentationalComponents/Home/Season.module.sass","presentationalComponents/SeasonDetails.module.sass","presentationalComponents/shared/components/Logo.tsx","assets/images/drivers/index.ts","presentationalComponents/Home/Season/Driver.tsx","assets/images/cars/index.ts","presentationalComponents/shared/components/Background.tsx","presentationalComponents/Home/Season/ActionButton.tsx","presentationalComponents/shared/components/Info.tsx","presentationalComponents/Home/Season/Results/ResultBox.tsx","presentationalComponents/Home/Season/Results.tsx","presentationalComponents/Home/Season.tsx","presentationalComponents/Home/PageIndicator.tsx","presentationalComponents/Home.tsx","presentationalComponents/SeasonDetails/SeasonTable/RoundRow.tsx","presentationalComponents/SeasonDetails/SeasonTable.tsx","presentationalComponents/SeasonDetails/BackButton.tsx","presentationalComponents/SeasonDetails.tsx","presentationalComponents/shared/components/Loading.tsx","api/normalizeSeasonDetailsData.ts","containers/SeasonDetailsContainer.tsx","api/getSeasonDetails.ts","api/normalizeSeasonsData.ts","containers/App.tsx","api/getSeasons.ts","serviceWorker.js","index.tsx","presentationalComponents/shared/components/Info.module.sass","presentationalComponents/shared/components/Background.module.sass","presentationalComponents/Home/Season/Results/ResultBox.module.sass","presentationalComponents/Home/PageIndicator.module.sass","presentationalComponents/shared/components/Loading.module.sass","presentationalComponents/SeasonDetails/SeasonTable/RoundRow.module.sass","presentationalComponents/Home.module.sass","presentationalComponents/Home/Season/Driver.module.sass","containers/App.module.sass","assets/images/logo.png","presentationalComponents/shared/components/Logo.module.sass","assets/images/drivers/alonso.png","assets/images/drivers/raikkonen.png","assets/images/drivers/hamilton.png","assets/images/drivers/vettel.png","assets/images/drivers/button.png","assets/images/cars/2005.jpg","assets/images/cars/2006.png","assets/images/cars/2007.jpg","assets/images/cars/2008.jpg","assets/images/cars/2009.png","assets/images/cars/2010.png","assets/images/cars/2011.png","assets/images/cars/2012.png","assets/images/cars/2013.png","assets/images/cars/2014.png","assets/images/cars/2015.png","presentationalComponents/Home/Season/ActionButton.module.sass","presentationalComponents/Home/Season/Results.module.sass","presentationalComponents/SeasonDetails/SeasonTable.module.sass","presentationalComponents/SeasonDetails/BackButton.module.sass"],"names":["module","exports","root","logo","driver","info","results","background","backButton","header","body","Logo","props","react_default","a","createElement","src","className","classNames","css","alt","drivers","alonso","driverImageFernando","raikkonen","driverImageKimi","hamilton","driverImageHamilton","vettel","driverImageVettel","button","driverImageButton","Driver","driverId","image","title","cars","2005","carImage2005","2006","carImage2006","2007","carImage2007","2008","carImage2008","2009","carImage2009","2010","carImage2010","2011","carImage2011","2012","carImage2012","2013","carImage2013","2014","carImage2014","2015","carImage2015","Background","season","car","pageShades","ActionButton","onClick","children","Info","smallTitle","onViewDetails","ActionButton_ActionButton","viewPageButton","ResultBox","value","Results","data","map","result","index","ResultBox_ResultBox","Object","assign","key","Season","_this$props","this","Background_Background","Logo_Logo","Driver_Driver","Info_Info","Results_Results","Component","PageIndicator","pages","Array","count","fill","undefined","_","_classNames","defineProperty","circle","selected","onSelect","Home","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handlePageInView","selectedPage","setState","handleSelectPage","scrollToComponent","refs","handleSelectSeason","state","_this2","seasons","lib_default","classNameInView","inView","repeatOnInView","onInView","Season_Season","ref","PageIndicator_PageIndicator","length","RoundRow","champion","seasonChampion","roundNo","round","raceName","team","laps","grid","time","SeasonTable","rounds","RoundRow_RoundRow","BackButton","SeasonDetails","_ref","onClose","BackButton_BackButton","SeasonTable_SeasonTable","Loading","pageCenter","loading","react_spinners","sizeUnit","size","color","normalizeSeasonDetailsData","MRData","RaceTable","Races","roundsData","concat","givenName","familyName","Constructor","name","Time","SeasonDetailsContainer","fetch","then","res","json","Loading_Loading","SeasonDetails_SeasonDetails","objectSpread","championDriverId","normalizeSeasonsData","StandingsTable","StandingsLists","seasonData","DriverStandings","permanentNumber","wins","points","App","selectedSeason","bind","assertThisInitialized","handleCloseDetails","renderPage","SeasonDetailsContainer_SeasonDetailsContainer","Home_Home","Boolean","window","location","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","__webpack_require__","p"],"mappings":"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AA,CAAkBC,KAAA,wCCDlBF,EAAAC,QAAiB4M,EAAAC,EAAuB,uDCAxC9M,EAAAC,QAAiB4M,EAAAC,EAAuB,0DCAxC9M,EAAAC,QAAiB4M,EAAAC,EAAuB,yDCAxC9M,EAAAC,QAAiB4M,EAAAC,EAAuB,uDCAxC9M,EAAAC,QAAiB4M,EAAAC,EAAuB,uDCAxC9M,EAAAC,QAAiB4M,EAAAC,EAAuB,qDCAxC9M,EAAAC,QAAiB4M,EAAAC,EAAuB,qDCAxC9M,EAAAC,QAAiB4M,EAAAC,EAAuB,qDCAxC9M,EAAAC,QAAiB4M,EAAAC,EAAuB,qDCAxC9M,EAAAC,QAAiB4M,EAAAC,EAAuB,qDCAxC9M,EAAAC,QAAiB4M,EAAAC,EAAuB,qDCAxC9M,EAAAC,QAAiB4M,EAAAC,EAAuB,qDCAxC9M,EAAAC,QAAiB4M,EAAAC,EAAuB,qDCAxC9M,EAAAC,QAAiB4M,EAAAC,EAAuB,qDCAxC9M,EAAAC,QAAiB4M,EAAAC,EAAuB,qDCAxC9M,EAAAC,QAAiB4M,EAAAC,EAAuB,qDCCxC9M,EAAAC,QAAA,CAAkBC,KAAA,gDCAlBF,EAAAC,QAAA,CAAkBC,KAAA,2CCAlBF,EAAAC,QAAA,CAAkBC,KAAA,+CCAlBF,EAAAC,QAAA,CAAkBC,KAAA","file":"static/js/main.2b2b7570.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Season_root__2aMPd\",\"logo\":\"Season_logo__3Yuov\",\"driver\":\"Season_driver__c-5qG\",\"info\":\"Season_info__1lN1b\",\"results\":\"Season_results__ex5l0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SeasonDetails_root__2jiw1\",\"background\":\"SeasonDetails_background__3MVWt\",\"logo\":\"SeasonDetails_logo__1AHmC\",\"backButton\":\"SeasonDetails_backButton__3BO_4\",\"header\":\"SeasonDetails_header__3lERX\",\"body\":\"SeasonDetails_body__3Ij02\"};","import React from \"react\";\nimport logo from \"assets/images/logo.png\";\nimport css from \"./Logo.module.sass\";\nimport classNames from \"classnames\";\n\ninterface IProps {\n  className?: string;\n}\n\nconst Logo = (props: IProps) => (\n  <img src={logo} className={classNames(css.root, props.className)} alt=\"f1\" />\n);\n\nexport { Logo };\n","import driverImageFernando from \"./alonso.png\";\nimport driverImageKimi from \"./raikkonen.png\";\nimport driverImageHamilton from \"./hamilton.png\";\nimport driverImageVettel from \"./vettel.png\";\nimport driverImageButton from \"./button.png\";\n\nexport default {\n  alonso: driverImageFernando,\n  raikkonen: driverImageKimi,\n  hamilton: driverImageHamilton,\n  vettel: driverImageVettel,\n  button: driverImageButton\n};\n","import React from \"react\";\nimport drivers from \"../../../assets/images/drivers\";\nimport css from \"./Driver.module.sass\";\n\ninterface IProps {\n  driver: string;\n  driverId: string;\n  className?: string;\n}\n\nconst Driver = (props: IProps) => (\n  <div className={props.className}>\n    <img\n      src={drivers[props.driverId]}\n      className={css.image}\n      alt={props.driver}\n    />\n    <div className={css.title}>{props.driver}</div>\n  </div>\n);\n\nexport { Driver };\n","import carImage2005 from \"./2005.jpg\";\nimport carImage2006 from \"./2006.png\";\nimport carImage2007 from \"./2007.jpg\";\nimport carImage2008 from \"./2008.jpg\";\nimport carImage2009 from \"./2009.png\";\nimport carImage2010 from \"./2010.png\";\nimport carImage2011 from \"./2011.png\";\nimport carImage2012 from \"./2012.png\";\nimport carImage2013 from \"./2013.png\";\nimport carImage2014 from \"./2014.png\";\nimport carImage2015 from \"./2015.png\";\n\nexport default {\n  2005: carImage2005,\n  2006: carImage2006,\n  2007: carImage2007,\n  2008: carImage2008,\n  2009: carImage2009,\n  2010: carImage2010,\n  2011: carImage2011,\n  2012: carImage2012,\n  2013: carImage2013,\n  2014: carImage2014,\n  2015: carImage2015\n};\n","import React from \"react\";\nimport css from \"./Background.module.sass\";\nimport cars from \"../../../assets/images/cars\";\nimport classNames from \"classnames\";\n\ninterface IProps {\n  season: string;\n  className?: string;\n}\n\nconst Background = (props: IProps) => (\n  <div className={classNames(css.root, props.className)}>\n    <img src={cars[props.season]} className={css.car} alt=\"car\" />\n    <div className={css.pageShades} />\n  </div>\n);\n\nexport { Background };\n","import React from \"react\";\nimport css from \"./ActionButton.module.sass\";\nimport classNames from \"classnames\";\n\ninterface IProps {\n  children: string | ChildNode;\n  className?: string;\n  onClick?: any;\n}\n\nconst ActionButton = (props: IProps) => (\n  <div\n    className={classNames(css.root, props.className)}\n    onClick={props.onClick}\n  >\n    {props.children}\n  </div>\n);\n\nexport { ActionButton };\n","import React from \"react\";\nimport css from \"./Info.module.sass\";\nimport classNames from \"classnames\";\nimport { ActionButton } from \"../../Home/Season/ActionButton\";\n\ninterface IProps {\n  season: string;\n  className?: string;\n  onViewDetails?: any;\n}\n\nconst Info = (props: IProps) => (\n  <div className={classNames(css.root, props.className)}>\n    <div className={css.season}>{props.season}</div>\n    <div className={css.title}>Formula 1</div>\n    <div className={css.smallTitle}>World Championship</div>\n    {props.onViewDetails && (\n      <ActionButton\n        className={css.viewPageButton}\n        onClick={props.onViewDetails}\n      >\n        View Details\n      </ActionButton>\n    )}\n  </div>\n);\n\nexport { Info };\n","import React from \"react\";\nimport css from \"./ResultBox.module.sass\";\nimport classNames from \"classnames\";\nimport { IResult } from \"../IResult\";\n\ninterface IProps extends IResult {\n  className?: string;\n}\n\nconst ResultBox = (props: IProps) => (\n  <div className={classNames(css.root, props.className)}>\n    <div className={css.title}>{props.title}</div>\n    <div className={css.value}>{props.value}</div>\n  </div>\n);\n\nexport { ResultBox };\n","import React from \"react\";\nimport css from \"./Results.module.sass\";\nimport classNames from \"classnames\";\nimport { ResultBox } from \"./Results/ResultBox\";\nimport { IResult } from \"./IResult\";\n\ninterface IProps {\n  data: IResult[];\n  className?: string;\n}\n\nconst Results = (props: IProps) => (\n  <div className={classNames(css.root, props.className)}>\n    {props.data.map((result, index) => (\n      <ResultBox key={index + \"\"} {...result} />\n    ))}\n  </div>\n);\n\nexport { Results };\n","import React, { Component } from \"react\";\nimport css from \"./Season.module.sass\";\nimport { Logo } from \"../shared/components/Logo\";\nimport { Driver } from \"./Season/Driver\";\nimport { Background } from \"../shared/components/Background\";\nimport { Info } from \"../shared/components/Info\";\nimport { Results } from \"./Season/Results\";\nimport { IResult } from \"./Season/IResult\";\n\ninterface IProps {\n  season: string;\n  results: IResult[];\n  driver: string;\n  driverId: string;\n  onViewDetails: any;\n}\n\n// just let it be class without state, because we need to use \"ref\" in parent\nclass Season extends Component<IProps, never> {\n  render() {\n    const { season, results, driver, driverId, onViewDetails } = this.props;\n\n    return (\n      <div className={css.root}>\n        <Background className={css.background} season={season} />\n        <Logo className={css.logo} />\n        <Driver driverId={driverId} driver={driver} className={css.driver} />\n        <Info\n          season={season}\n          className={css.info}\n          onViewDetails={onViewDetails}\n        />\n        <Results className={css.results} data={results} />\n      </div>\n    );\n  }\n}\n\nexport { Season };\n","import React from \"react\";\nimport css from \"./PageIndicator.module.sass\";\nimport classNames from \"classnames\";\n\ninterface IProps {\n  count: number;\n  selected: number;\n  onSelect: any;\n}\n\nconst PageIndicator = (props: IProps) => {\n  // initialize new array with undefined values\n  // to use \"map\" easily to render circles\n  let pages: Array<undefined> = new Array(props.count);\n  pages.fill(undefined);\n\n  return (\n    <div className={css.root}>\n      {pages.map((_, index) => (\n        <div\n          key={index}\n          className={classNames({\n            [css.circle]: true,\n            [css.selected]: props.selected === index\n          })}\n          onClick={() => props.onSelect(index)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport { PageIndicator };\n","import React, { Component } from \"react\";\nimport css from \"./Home.module.sass\";\nimport { Season } from \"./Home/Season\";\nimport { PageIndicator } from \"./Home/PageIndicator\";\nimport InViewMonitor from \"react-inview-monitor\";\nimport scrollToComponent from \"react-scroll-to-component\";\nimport { ISeason } from \"./Home/ISeason\";\n\ninterface IProps {\n  seasons: ISeason[];\n  onViewDetails: any;\n}\n\ninterface IState {\n  selectedPage: number;\n}\n\nclass Home extends Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedPage: 0\n    };\n  }\n\n  handlePageInView = selectedPage => () => {\n    this.setState({ selectedPage });\n  };\n\n  handleSelectPage = selectedPage => {\n    scrollToComponent(this.refs[selectedPage + \"\"]);\n    this.setState({ selectedPage });\n  };\n\n  handleSelectSeason = (season, index) => () => {\n    this.props.onViewDetails(season, index);\n  };\n\n  render() {\n    const { seasons } = this.props;\n    return (\n      <div className={css.root}>\n        {seasons.map((season, index) => (\n          <InViewMonitor\n            key={index + \"\"}\n            classNameInView={css.inView}\n            repeatOnInView={true}\n            onInView={this.handlePageInView(index)}\n          >\n            <Season\n              ref={\"\" + index}\n              {...season}\n              onViewDetails={this.handleSelectSeason(season, index)}\n            />\n          </InViewMonitor>\n        ))}\n        <PageIndicator\n          count={seasons.length}\n          onSelect={this.handleSelectPage}\n          selected={this.state.selectedPage}\n        />\n      </div>\n    );\n  }\n}\n\nexport { Home };\n","import React from \"react\";\nimport css from \"./RoundRow.module.sass\";\nimport classNames from \"classnames\";\nimport { IRound } from \"../IRound\";\n\nconst RoundRow = (props: IRound) => {\n  return (\n    <div\n      className={classNames({\n        [css.root]: true,\n        [css.champion]: props.seasonChampion\n      })}\n    >\n      <div className={classNames(css.data, css.roundNo)}>{props.round}</div>\n      <div className={css.data}>{props.raceName}</div>\n      <div className={css.data}>{props.driver}</div>\n      <div className={css.data}>{props.team}</div>\n      <div className={css.data}>{props.laps} Laps</div>\n      <div className={css.data}>{props.grid} Grid</div>\n      <div className={css.data}>{props.time}</div>\n    </div>\n  );\n};\n\nexport { RoundRow };\n","import React from \"react\";\nimport css from \"./SeasonTable.module.sass\";\nimport { RoundRow } from \"./SeasonTable/RoundRow\";\nimport { IRound } from \"./IRound\";\n\ninterface IProps {\n  rounds: IRound[];\n}\n\nconst SeasonTable = (props: IProps) => {\n  return (\n    <div className={css.root}>\n      {props.rounds.map((round, index) => (\n        <RoundRow key={index} {...round} />\n      ))}\n    </div>\n  );\n};\n\nexport { SeasonTable };\n","import React from \"react\";\nimport css from \"./BackButton.module.sass\";\nimport classNames from \"classnames\";\n\ninterface IProps {\n  className?: string;\n  onClick?: any;\n}\n\nconst BackButton = (props: IProps) => (\n  <div\n    className={classNames(css.root, props.className)}\n    onClick={props.onClick}\n  />\n);\n\nexport { BackButton };\n","import React from \"react\";\nimport css from \"./SeasonDetails.module.sass\";\nimport { SeasonTable } from \"./SeasonDetails/SeasonTable\";\nimport { Info } from \"./shared/components/Info\";\nimport { Background } from \"./shared/components/Background\";\nimport { BackButton } from \"./SeasonDetails/BackButton\";\nimport { Logo } from \"./shared/components/Logo\";\nimport { IRound } from \"./SeasonDetails/IRound\";\n\ninterface IProps {\n  rounds: IRound[];\n  season: string;\n  onClose: any;\n}\n\nconst SeasonDetails = ({ rounds, season, onClose }: IProps) => (\n  <div className={css.root}>\n    <Background season={season} className={css.background} />\n    <BackButton className={css.backButton} onClick={onClose} />\n    <Logo className={css.logo} />\n    <div className={css.header}>\n      <Info season={season} />\n    </div>\n    <div className={css.body}>\n      <SeasonTable rounds={rounds} />\n    </div>\n  </div>\n);\n\nexport { SeasonDetails };\n","import React from \"react\";\nimport css from \"./Loading.module.sass\";\nimport { PropagateLoader } from \"react-spinners\";\nimport { Logo } from \"./Logo\";\n\nconst Loading = () => (\n  <div className={css.pageCenter}>\n    <Logo className={css.logo} />\n    <div className={css.loading}>\n      <PropagateLoader\n        sizeUnit={\"px\"}\n        size={25}\n        color={\"#FF2000\"}\n        loading={true}\n      />\n    </div>\n  </div>\n);\n\nexport { Loading };\n","import { IRound } from \"../presentationalComponents/SeasonDetails/IRound\";\n\nexport const normalizeSeasonDetailsData = (data: any): IRound[] => {\n  const unstructedRounds = data.MRData.RaceTable.Races;\n\n  return unstructedRounds.map(roundsData => {\n    const info = roundsData.Results[0];\n    const result: IRound = {\n      round: roundsData.round,\n      raceName: roundsData.raceName,\n      driver: `${info.Driver.givenName} ${info.Driver.familyName}`,\n      driverId: info.Driver.driverId,\n      team: info.Constructor.name,\n      laps: info.laps,\n      grid: info.grid,\n      time: info.Time.time\n    };\n    return result;\n  });\n};\n","import React, { Component } from \"react\";\nimport { SeasonDetails } from \"../presentationalComponents/SeasonDetails\";\nimport { Loading } from \"../presentationalComponents/shared/components/Loading\";\nimport { IRound } from \"../presentationalComponents/SeasonDetails/IRound\";\nimport { getSeasonDetails } from \"../api/getSeasonDetails\";\n\ninterface IProps {\n  season: string;\n  championDriverId: string;\n  onClose: any;\n}\n\ninterface IState {\n  loading: boolean;\n  rounds: IRound[];\n}\n\nclass SeasonDetailsContainer extends Component<IProps, IState> {\n  constructor(props) {\n    super(props);\n    this.state = { loading: true, rounds: [] };\n  }\n\n  async componentDidMount() {\n    const rounds = await getSeasonDetails(this.props.season);\n    this.setState({ rounds, loading: false });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <Loading />;\n    }\n\n    return (\n      <SeasonDetails\n        rounds={this.state.rounds.map(round => ({\n          ...round,\n          seasonChampion: this.props.championDriverId === round.driverId\n        }))}\n        season={this.props.season}\n        onClose={this.props.onClose}\n      />\n    );\n  }\n}\n\nexport { SeasonDetailsContainer };\n","import { normalizeSeasonDetailsData } from \"./normalizeSeasonDetailsData\";\n\nexport const getSeasonDetails = (season: string) => {\n  return fetch(`https://ergast.com/api/f1/${season}/results/1.json`)\n    .then(res => res.json())\n    .then(normalizeSeasonDetailsData);\n};\n","import { ISeason } from \"../presentationalComponents/Home/ISeason\";\n\nexport const normalizeSeasonsData = (data: any): ISeason[] => {\n  const seasonsUnstructed = data.MRData.StandingsTable.StandingsLists;\n\n  return seasonsUnstructed.map(seasonData => {\n    const champion = seasonData.DriverStandings[0];\n    const driver = champion.Driver;\n    const results = [\n      {\n        title: \"No.\",\n        value: driver.permanentNumber\n      },\n      {\n        title: \"Wins\",\n        value: champion.wins\n      },\n      {\n        title: \"Points\",\n        value: champion.points\n      }\n    ];\n    const result: ISeason = {\n      season: seasonData.season,\n      driver: `${driver.givenName} ${driver.familyName}`,\n      driverId: driver.driverId,\n      results\n    };\n    return result;\n  });\n};\n","import React, { Component } from \"react\";\nimport css from \"./App.module.sass\";\nimport { Home } from \"../presentationalComponents/Home\";\nimport { SeasonDetailsContainer } from \"./SeasonDetailsContainer\";\nimport { ISeason } from \"../presentationalComponents/Home/ISeason\";\nimport { IRound } from \"../presentationalComponents/SeasonDetails/IRound\";\nimport { getSeasons } from \"../api/getSeasons\";\nimport { Loading } from \"../presentationalComponents/shared/components/Loading\";\n\nconst rounds: IRound[] = [\n  {\n    round: 1,\n    raceName: \"Austali\",\n    driver: \"Lwoid\",\n    driverId: \"Lwoid\",\n    team: \"McDAS\",\n    laps: \"12\",\n    grid: \"2\",\n    time: \"234.3243.3\"\n  }\n];\n\ninterface IState {\n  loading: boolean;\n  selectedSeason: null | ISeason;\n  seasons: ISeason[];\n}\n\nclass App extends Component<any, IState> {\n  constructor(props) {\n    super(props);\n    this.state = { loading: true, seasons: [], selectedSeason: null };\n\n    this.handleSelectSeason = this.handleSelectSeason.bind(this);\n    this.handleCloseDetails = this.handleCloseDetails.bind(this);\n  }\n\n  async componentDidMount() {\n    const seasons = await getSeasons();\n    this.setState({ seasons, loading: false });\n  }\n\n  handleSelectSeason(selectedSeason) {\n    this.setState({ selectedSeason });\n  }\n\n  handleCloseDetails() {\n    this.setState({ selectedSeason: null });\n  }\n\n  render() {\n    return <div className={css.root}>{this.renderPage()}</div>;\n  }\n\n  renderPage() {\n    if (this.state.loading) {\n      return <Loading />;\n    }\n\n    if (this.state.selectedSeason) {\n      return (\n        <SeasonDetailsContainer\n          season={this.state.selectedSeason.season}\n          championDriverId={this.state.selectedSeason.driverId}\n          onClose={this.handleCloseDetails}\n        />\n      );\n    } else {\n      return (\n        <Home\n          seasons={this.state.seasons}\n          onViewDetails={this.handleSelectSeason}\n        />\n      );\n    }\n  }\n}\n\nexport default App;\n","import { normalizeSeasonsData } from \"./normalizeSeasonsData\";\n\nexport const getSeasons = () => {\n  return fetch(\n    \"https://ergast.com/api/f1/driverStandings/1.json?limit=11&offset=55\"\n  )\n    .then(res => res.json())\n    .then(normalizeSeasonsData);\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.module.sass\";\nimport \"roboto-fontface/css/roboto/roboto-fontface.css\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Info_root__2PrTL\",\"season\":\"Info_season__NPPQ4\",\"title\":\"Info_title__2Zqc7\",\"smallTitle\":\"Info_smallTitle__Vy82Z\",\"viewPageButton\":\"Info_viewPageButton__2glOI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"car\":\"Background_car__2vYUg\",\"pageShades\":\"Background_pageShades__2pbVi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ResultBox_root__3E78Y\",\"title\":\"ResultBox_title__1RTKv\",\"value\":\"ResultBox_value__2FBsR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PageIndicator_root__SL_nG\",\"circle\":\"PageIndicator_circle__3bzW_\",\"selected\":\"PageIndicator_selected__XOZmY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageCenter\":\"Loading_pageCenter__2IQ4q\",\"loading\":\"Loading_loading__2aK_O\",\"logo\":\"Loading_logo__Lhj1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"RoundRow_root__2QNrs\",\"champion\":\"RoundRow_champion__2Z66p\",\"data\":\"RoundRow_data__3T5Ew\",\"roundNo\":\"RoundRow_roundNo__1UC7p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Home_root__3roH8\",\"inView\":\"Home_inView__1yKxw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"Driver_image__28WlY\",\"title\":\"Driver_title__1qoRQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__3Rmy3\"};","module.exports = __webpack_public_path__ + \"static/media/logo.30f3fefd.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Logo_root__1vQfU\"};","module.exports = __webpack_public_path__ + \"static/media/alonso.b3ebb787.png\";","module.exports = __webpack_public_path__ + \"static/media/raikkonen.4173b8ac.png\";","module.exports = __webpack_public_path__ + \"static/media/hamilton.3ed8e114.png\";","module.exports = __webpack_public_path__ + \"static/media/vettel.f4260e55.png\";","module.exports = __webpack_public_path__ + \"static/media/button.120bf268.png\";","module.exports = __webpack_public_path__ + \"static/media/2005.90dbbe9d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2006.651fe4d6.png\";","module.exports = __webpack_public_path__ + \"static/media/2007.6e8d57cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2008.b1903daf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2009.1d736261.png\";","module.exports = __webpack_public_path__ + \"static/media/2010.7b86a6e4.png\";","module.exports = __webpack_public_path__ + \"static/media/2011.3adc05f5.png\";","module.exports = __webpack_public_path__ + \"static/media/2012.a0f30160.png\";","module.exports = __webpack_public_path__ + \"static/media/2013.c9e11d5f.png\";","module.exports = __webpack_public_path__ + \"static/media/2014.dd62a722.png\";","module.exports = __webpack_public_path__ + \"static/media/2015.df2e4717.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"ActionButton_root__3xeDs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Results_root__QRu5O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SeasonTable_root__ZJP7q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"BackButton_root__1YLz4\"};"],"sourceRoot":""}